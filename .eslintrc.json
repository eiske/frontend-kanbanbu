{
    "env": {
        "browser": true,
        "es2020": true,
        "jest": true,
        "node": true
    },
    "settings": {
        "react": {
            "version": "detect"
        },
        "import/parsers": {
            "@typescript-eslint/parser": [".ts", ".tsx"]
        },
        "import/resolver": {
            "typescript": true,
            "node": true
        },
        "import/extensions": [".ts", ".tsx", ".js", ".jsx"]
    },
    "root": true,
    "parser": "@typescript-eslint/parser",
    "plugins": ["@typescript-eslint", "import", "react-hooks"],
    "extends": [
        "eslint:recommended",
        "plugin:@typescript-eslint/recommended",
        "plugin:react/recommended",
        "airbnb",
        "plugin:react-hooks/recommended",
        "plugin:import/recommended",
        "plugin:@typescript-eslint/recommended-requiring-type-checking"
    ],
    "overrides": [
        {
          "files": ["*.ts", "*.tsx"], // Your TypeScript files extension
          "parserOptions": {
            "project": ["./tsconfig.json"] // Specify it only for TypeScript files
          }
        }
    ],
    "rules": {
        "indent": [
            "error",
            4,
            {
                "SwitchCase": 1
            }
        ],
        "@typescript-eslint/no-explicit-any": 0,
        "@typescript-eslint/no-unsafe-member-access": 0,
        "@typescript-eslint/no-unsafe-assignment": 0,
        "@typescript-eslint/no-unsafe-call": "off",
        "@typescript-eslint/no-unsafe-return": "off",
        "@typescript-eslint/no-floating-promises": "off",
        "react/jsx-filename-extension": [
            1,
            {
                "extensions": [
                    ".tsx",
                    ".jsx"
                ]
            }
        ],
        "@typescript-eslint/no-misused-promises": ["error", {
            "checksVoidReturn": {
                "attributes": false
            }
        }],
        "import/no-extraneous-dependencies": "off",
        "no-console": "off",
        "keyword-spacing": "error",
        "no-trailing-spaces": "error",
        "space-before-blocks": [
            "error",
            {
                "functions": "always",
                "keywords": "always",
                "classes": "always"
            }
        ],
        "import/extensions": [
            "error",
            "ignorePackages",
            {
                "js": "never",
                "jsx": "never",
                "ts": "never",
                "tsx": "never"
            }
        ],
        "object-curly-newline": [
            "error",
            {
                "ObjectExpression": {
                    "consistent": true
                },
                "ObjectPattern": {
                    "consistent": true
                },
                "ImportDeclaration": {
                    "multiline": true,
                    "minProperties": 4
                },
                "ExportDeclaration": {
                    "multiline": true,
                    "minProperties": 4
                }
            }
        ],
        "comma-dangle": [
            "error",
            {
                "arrays": "always-multiline",
                "objects": "always-multiline",
                "imports": "always-multiline",
                "exports": "always-multiline",
                "functions": "never"
            }
        ],
        "react/function-component-definition": [
            "error",
            {
                "namedComponents": "arrow-function"
            }
        ],
        "import/prefer-default-export": ["off"],
        "no-param-reassign": "off",
        "@typescript-eslint/no-unsafe-argument":"off",
        "@typescript-eslint/no-unused-vars": ["warn"],
        "@typescript-eslint/ban-types": "off",
        "react/jsx-indent": ["error", 4],
        "react/jsx-indent-props": ["error", 4],
        "react/react-in-jsx-scope": "off",
        "react/jsx-props-no-spreading": "off",
        "react-hooks/rules-of-hooks": "error",
        "react-hooks/exhaustive-deps": "warn"
    }
}
